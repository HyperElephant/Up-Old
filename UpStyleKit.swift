//
//  UpStyleKit.swift
//  Up
//
//  Created by David Taylor on 9/11/16.
//  Copyright (c) 2016 Hyper Elephant. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

open class UpStyleKit : NSObject {

    //// Cache

    fileprivate struct Cache {
        static let baseColor: UIColor = UIColor(red: 0.576, green: 1.000, blue: 0.463, alpha: 1.000)
        static let outlineColor: UIColor = UIColor(red: 0.500, green: 0.500, blue: 0.500, alpha: 1.000)
        static let accentColor: UIColor = UIColor(red: 0.698, green: 0.184, blue: 0.596, alpha: 1.000)
    }

    //// Colors

    open class var baseColor: UIColor { return Cache.baseColor }
    open class var outlineColor: UIColor { return Cache.outlineColor }
    open class var accentColor: UIColor { return Cache.accentColor }

    //// Drawing Methods

    open class func drawSpotlightIcon() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 40, height: 40))
        UIColor.white.setFill()
        rectanglePath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 20.5, y: 2))
        bezier2Path.addCurve(to: CGPoint(x: 26.23, y: 7.73), controlPoint1: CGPoint(x: 20.5, y: 2), controlPoint2: CGPoint(x: 23.07, y: 4.56))
        bezier2Path.addCurve(to: CGPoint(x: 26.52, y: 8.02), controlPoint1: CGPoint(x: 26.33, y: 7.83), controlPoint2: CGPoint(x: 26.42, y: 7.92))
        bezier2Path.addCurve(to: CGPoint(x: 29.76, y: 11.26), controlPoint1: CGPoint(x: 27.57, y: 9.07), controlPoint2: CGPoint(x: 28.67, y: 10.17))
        bezier2Path.addCurve(to: CGPoint(x: 38, y: 19.5), controlPoint1: CGPoint(x: 33.96, y: 15.46), controlPoint2: CGPoint(x: 38, y: 19.5))
        bezier2Path.addCurve(to: CGPoint(x: 22.69, y: 19.5), controlPoint1: CGPoint(x: 38, y: 19.5), controlPoint2: CGPoint(x: 27.38, y: 19.55))
        bezier2Path.addCurve(to: CGPoint(x: 22.69, y: 28.25), controlPoint1: CGPoint(x: 22.69, y: 22.33), controlPoint2: CGPoint(x: 22.69, y: 25.36))
        bezier2Path.addLine(to: CGPoint(x: 18.31, y: 28.25))
        bezier2Path.addCurve(to: CGPoint(x: 18.31, y: 19.33), controlPoint1: CGPoint(x: 18.31, y: 25.36), controlPoint2: CGPoint(x: 18.31, y: 22.16))
        bezier2Path.addCurve(to: CGPoint(x: 18.31, y: 16.06), controlPoint1: CGPoint(x: 18.31, y: 17.81), controlPoint2: CGPoint(x: 18.31, y: 16.64))
        bezier2Path.addCurve(to: CGPoint(x: 20.5, y: 16.01), controlPoint1: CGPoint(x: 19.57, y: 16.04), controlPoint2: CGPoint(x: 20.5, y: 16.01))
        bezier2Path.addLine(to: CGPoint(x: 29.25, y: 16.22))
        bezier2Path.addLine(to: CGPoint(x: 20.5, y: 7.47))
        bezier2Path.addLine(to: CGPoint(x: 11.75, y: 16.22))
        bezier2Path.addCurve(to: CGPoint(x: 13.94, y: 16.17), controlPoint1: CGPoint(x: 11.75, y: 16.22), controlPoint2: CGPoint(x: 12.68, y: 16.2))
        bezier2Path.addCurve(to: CGPoint(x: 13.94, y: 19.5), controlPoint1: CGPoint(x: 13.94, y: 16.78), controlPoint2: CGPoint(x: 13.94, y: 18.05))
        bezier2Path.addCurve(to: CGPoint(x: 3, y: 19.5), controlPoint1: CGPoint(x: 8.97, y: 19.56), controlPoint2: CGPoint(x: 3, y: 19.5))
        bezier2Path.addCurve(to: CGPoint(x: 12.72, y: 9.78), controlPoint1: CGPoint(x: 3, y: 19.5), controlPoint2: CGPoint(x: 8.05, y: 14.45))
        bezier2Path.addCurve(to: CGPoint(x: 20.5, y: 2), controlPoint1: CGPoint(x: 16.67, y: 5.83), controlPoint2: CGPoint(x: 20.36, y: 2.14))
        bezier2Path.addLine(to: CGPoint(x: 20.5, y: 2))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 22.69, y: 32.62))
        bezier2Path.addCurve(to: CGPoint(x: 22.69, y: 37), controlPoint1: CGPoint(x: 22.69, y: 35.23), controlPoint2: CGPoint(x: 22.69, y: 37))
        bezier2Path.addLine(to: CGPoint(x: 18.31, y: 37))
        bezier2Path.addCurve(to: CGPoint(x: 18.31, y: 32.62), controlPoint1: CGPoint(x: 18.31, y: 37), controlPoint2: CGPoint(x: 18.31, y: 35.23))
        bezier2Path.addLine(to: CGPoint(x: 22.69, y: 32.62))
        bezier2Path.close()
        UpStyleKit.baseColor.setFill()
        bezier2Path.fill()
    }

    open class func drawTabBarIcon() {

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 12.5, y: 0))
        bezier2Path.addCurve(to: CGPoint(x: 16.59, y: 4.1), controlPoint1: CGPoint(x: 12.5, y: 0), controlPoint2: CGPoint(x: 14.33, y: 1.83))
        bezier2Path.addCurve(to: CGPoint(x: 16.8, y: 4.3), controlPoint1: CGPoint(x: 16.66, y: 4.16), controlPoint2: CGPoint(x: 16.73, y: 4.23))
        bezier2Path.addCurve(to: CGPoint(x: 19.12, y: 6.62), controlPoint1: CGPoint(x: 17.55, y: 5.05), controlPoint2: CGPoint(x: 18.34, y: 5.84))
        bezier2Path.addCurve(to: CGPoint(x: 25, y: 12.5), controlPoint1: CGPoint(x: 22.11, y: 9.62), controlPoint2: CGPoint(x: 25, y: 12.5))
        bezier2Path.addCurve(to: CGPoint(x: 14.06, y: 12.5), controlPoint1: CGPoint(x: 25, y: 12.5), controlPoint2: CGPoint(x: 17.42, y: 12.54))
        bezier2Path.addCurve(to: CGPoint(x: 14.06, y: 18.75), controlPoint1: CGPoint(x: 14.06, y: 14.53), controlPoint2: CGPoint(x: 14.06, y: 16.69))
        bezier2Path.addLine(to: CGPoint(x: 10.94, y: 18.75))
        bezier2Path.addCurve(to: CGPoint(x: 10.94, y: 12.38), controlPoint1: CGPoint(x: 10.94, y: 16.69), controlPoint2: CGPoint(x: 10.94, y: 14.4))
        bezier2Path.addCurve(to: CGPoint(x: 10.94, y: 10.05), controlPoint1: CGPoint(x: 10.94, y: 11.3), controlPoint2: CGPoint(x: 10.94, y: 10.46))
        bezier2Path.addCurve(to: CGPoint(x: 12.5, y: 10.01), controlPoint1: CGPoint(x: 11.83, y: 10.03), controlPoint2: CGPoint(x: 12.5, y: 10.01))
        bezier2Path.addLine(to: CGPoint(x: 18.75, y: 10.16))
        bezier2Path.addLine(to: CGPoint(x: 12.5, y: 3.91))
        bezier2Path.addLine(to: CGPoint(x: 6.25, y: 10.16))
        bezier2Path.addCurve(to: CGPoint(x: 7.81, y: 10.12), controlPoint1: CGPoint(x: 6.25, y: 10.16), controlPoint2: CGPoint(x: 6.92, y: 10.14))
        bezier2Path.addCurve(to: CGPoint(x: 7.81, y: 12.5), controlPoint1: CGPoint(x: 7.81, y: 10.56), controlPoint2: CGPoint(x: 7.81, y: 11.47))
        bezier2Path.addCurve(to: CGPoint(x: -0, y: 12.5), controlPoint1: CGPoint(x: 4.27, y: 12.54), controlPoint2: CGPoint(x: -0, y: 12.5))
        bezier2Path.addCurve(to: CGPoint(x: 6.94, y: 5.56), controlPoint1: CGPoint(x: -0, y: 12.5), controlPoint2: CGPoint(x: 3.6, y: 8.9))
        bezier2Path.addCurve(to: CGPoint(x: 12.5, y: 0), controlPoint1: CGPoint(x: 9.77, y: 2.74), controlPoint2: CGPoint(x: 12.4, y: 0.1))
        bezier2Path.addLine(to: CGPoint(x: 12.5, y: 0))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 14.06, y: 21.88))
        bezier2Path.addCurve(to: CGPoint(x: 14.06, y: 25), controlPoint1: CGPoint(x: 14.06, y: 23.74), controlPoint2: CGPoint(x: 14.06, y: 25))
        bezier2Path.addLine(to: CGPoint(x: 10.94, y: 25))
        bezier2Path.addCurve(to: CGPoint(x: 10.94, y: 21.88), controlPoint1: CGPoint(x: 10.94, y: 25), controlPoint2: CGPoint(x: 10.94, y: 23.74))
        bezier2Path.addLine(to: CGPoint(x: 14.06, y: 21.88))
        bezier2Path.close()
        UIColor.gray.setFill()
        bezier2Path.fill()
    }

    open class func drawTabBarSettingsIcon() {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 15.5, y: 0.37))
        bezierPath.addCurve(to: CGPoint(x: 15.5, y: 4.73), controlPoint1: CGPoint(x: 15.5, y: 1.13), controlPoint2: CGPoint(x: 15.5, y: 2.99))
        bezierPath.addCurve(to: CGPoint(x: 15.96, y: 4.92), controlPoint1: CGPoint(x: 15.66, y: 4.79), controlPoint2: CGPoint(x: 15.81, y: 4.85))
        bezierPath.addCurve(to: CGPoint(x: 19.03, y: 1.84), controlPoint1: CGPoint(x: 16.79, y: 4.09), controlPoint2: CGPoint(x: 18.01, y: 2.87))
        bezierPath.addCurve(to: CGPoint(x: 23.16, y: 5.97), controlPoint1: CGPoint(x: 20.71, y: 2.88), controlPoint2: CGPoint(x: 22.13, y: 4.29))
        bezierPath.addCurve(to: CGPoint(x: 22.56, y: 6.57), controlPoint1: CGPoint(x: 22.96, y: 6.16), controlPoint2: CGPoint(x: 22.76, y: 6.37))
        bezierPath.addCurve(to: CGPoint(x: 22.38, y: 6.75), controlPoint1: CGPoint(x: 22.5, y: 6.63), controlPoint2: CGPoint(x: 22.44, y: 6.69))
        bezierPath.addCurve(to: CGPoint(x: 21.86, y: 7.27), controlPoint1: CGPoint(x: 22.21, y: 6.92), controlPoint2: CGPoint(x: 22.03, y: 7.1))
        bezierPath.addCurve(to: CGPoint(x: 21.49, y: 7.63), controlPoint1: CGPoint(x: 21.73, y: 7.39), controlPoint2: CGPoint(x: 21.61, y: 7.51))
        bezierPath.addCurve(to: CGPoint(x: 20.08, y: 9.04), controlPoint1: CGPoint(x: 20.98, y: 8.15), controlPoint2: CGPoint(x: 20.48, y: 8.64))
        bezierPath.addCurve(to: CGPoint(x: 20.28, y: 9.5), controlPoint1: CGPoint(x: 20.15, y: 9.19), controlPoint2: CGPoint(x: 20.22, y: 9.35))
        bezierPath.addCurve(to: CGPoint(x: 24.64, y: 9.5), controlPoint1: CGPoint(x: 20.28, y: 9.5), controlPoint2: CGPoint(x: 23.53, y: 9.5))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 12.5), controlPoint1: CGPoint(x: 24.87, y: 10.46), controlPoint2: CGPoint(x: 25, y: 11.47))
        bezierPath.addCurve(to: CGPoint(x: 24.68, y: 15.34), controlPoint1: CGPoint(x: 25, y: 13.48), controlPoint2: CGPoint(x: 24.89, y: 14.43))
        bezierPath.addLine(to: CGPoint(x: 20.34, y: 15.34))
        bezierPath.addCurve(to: CGPoint(x: 20.09, y: 15.95), controlPoint1: CGPoint(x: 20.26, y: 15.55), controlPoint2: CGPoint(x: 20.18, y: 15.75))
        bezierPath.addCurve(to: CGPoint(x: 23.17, y: 19.03), controlPoint1: CGPoint(x: 20.92, y: 16.78), controlPoint2: CGPoint(x: 22.14, y: 18.01))
        bezierPath.addCurve(to: CGPoint(x: 19.04, y: 23.16), controlPoint1: CGPoint(x: 22.14, y: 20.71), controlPoint2: CGPoint(x: 20.72, y: 22.12))
        bezierPath.addCurve(to: CGPoint(x: 15.97, y: 20.08), controlPoint1: CGPoint(x: 18.03, y: 22.14), controlPoint2: CGPoint(x: 16.8, y: 20.91))
        bezierPath.addCurve(to: CGPoint(x: 15.5, y: 20.28), controlPoint1: CGPoint(x: 15.82, y: 20.15), controlPoint2: CGPoint(x: 15.66, y: 20.22))
        bezierPath.addCurve(to: CGPoint(x: 15.5, y: 24.64), controlPoint1: CGPoint(x: 15.5, y: 22.01), controlPoint2: CGPoint(x: 15.5, y: 23.87))
        bezierPath.addCurve(to: CGPoint(x: 12.5, y: 25), controlPoint1: CGPoint(x: 14.54, y: 24.88), controlPoint2: CGPoint(x: 13.53, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 9.67, y: 24.68), controlPoint1: CGPoint(x: 11.53, y: 25), controlPoint2: CGPoint(x: 10.58, y: 24.89))
        bezierPath.addCurve(to: CGPoint(x: 9.67, y: 20.34), controlPoint1: CGPoint(x: 9.67, y: 23.95), controlPoint2: CGPoint(x: 9.67, y: 22.09))
        bezierPath.addCurve(to: CGPoint(x: 9.04, y: 20.09), controlPoint1: CGPoint(x: 9.45, y: 20.27), controlPoint2: CGPoint(x: 9.25, y: 20.18))
        bezierPath.addCurve(to: CGPoint(x: 5.97, y: 23.16), controlPoint1: CGPoint(x: 8.21, y: 20.92), controlPoint2: CGPoint(x: 6.98, y: 22.14))
        bezierPath.addCurve(to: CGPoint(x: 1.84, y: 19.04), controlPoint1: CGPoint(x: 4.29, y: 22.13), controlPoint2: CGPoint(x: 2.87, y: 20.72))
        bezierPath.addCurve(to: CGPoint(x: 2.34, y: 18.54), controlPoint1: CGPoint(x: 2, y: 18.88), controlPoint2: CGPoint(x: 2.17, y: 18.71))
        bezierPath.addCurve(to: CGPoint(x: 2.56, y: 18.32), controlPoint1: CGPoint(x: 2.41, y: 18.47), controlPoint2: CGPoint(x: 2.48, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 3.49, y: 17.39), controlPoint1: CGPoint(x: 2.87, y: 18.01), controlPoint2: CGPoint(x: 3.18, y: 17.69))
        bezierPath.addCurve(to: CGPoint(x: 4.92, y: 15.96), controlPoint1: CGPoint(x: 4.01, y: 16.86), controlPoint2: CGPoint(x: 4.51, y: 16.37))
        bezierPath.addCurve(to: CGPoint(x: 4.66, y: 15.34), controlPoint1: CGPoint(x: 4.82, y: 15.76), controlPoint2: CGPoint(x: 4.74, y: 15.55))
        bezierPath.addCurve(to: CGPoint(x: 0.32, y: 15.34), controlPoint1: CGPoint(x: 3.4, y: 15.34), controlPoint2: CGPoint(x: 1.16, y: 15.34))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 12.5), controlPoint1: CGPoint(x: 0.11, y: 14.43), controlPoint2: CGPoint(x: 0, y: 13.48))
        bezierPath.addCurve(to: CGPoint(x: 0.36, y: 9.5), controlPoint1: CGPoint(x: 0, y: 11.47), controlPoint2: CGPoint(x: 0.13, y: 10.46))
        bezierPath.addLine(to: CGPoint(x: 4.72, y: 9.5))
        bezierPath.addCurve(to: CGPoint(x: 4.92, y: 9.03), controlPoint1: CGPoint(x: 4.78, y: 9.34), controlPoint2: CGPoint(x: 4.85, y: 9.19))
        bezierPath.addCurve(to: CGPoint(x: 1.85, y: 5.96), controlPoint1: CGPoint(x: 4.09, y: 8.2), controlPoint2: CGPoint(x: 2.87, y: 6.98))
        bezierPath.addCurve(to: CGPoint(x: 4.97, y: 2.52), controlPoint1: CGPoint(x: 2.67, y: 4.63), controlPoint2: CGPoint(x: 3.73, y: 3.46))
        bezierPath.addCurve(to: CGPoint(x: 5.98, y: 1.84), controlPoint1: CGPoint(x: 5.3, y: 2.28), controlPoint2: CGPoint(x: 5.63, y: 2.05))
        bezierPath.addCurve(to: CGPoint(x: 8.29, y: 4.15), controlPoint1: CGPoint(x: 6.72, y: 2.58), controlPoint2: CGPoint(x: 7.56, y: 3.42))
        bezierPath.addLine(to: CGPoint(x: 8.31, y: 4.18))
        bezierPath.addCurve(to: CGPoint(x: 9.05, y: 4.91), controlPoint1: CGPoint(x: 8.58, y: 4.44), controlPoint2: CGPoint(x: 8.83, y: 4.69))
        bezierPath.addCurve(to: CGPoint(x: 9.67, y: 4.66), controlPoint1: CGPoint(x: 9.25, y: 4.82), controlPoint2: CGPoint(x: 9.46, y: 4.74))
        bezierPath.addCurve(to: CGPoint(x: 9.67, y: 0.33), controlPoint1: CGPoint(x: 9.67, y: 2.92), controlPoint2: CGPoint(x: 9.67, y: 1.06))
        bezierPath.addCurve(to: CGPoint(x: 12.38, y: 0), controlPoint1: CGPoint(x: 10.54, y: 0.12), controlPoint2: CGPoint(x: 11.45, y: 0.01))
        bezierPath.addLine(to: CGPoint(x: 12.62, y: 0))
        bezierPath.addCurve(to: CGPoint(x: 15.5, y: 0.37), controlPoint1: CGPoint(x: 13.61, y: 0.01), controlPoint2: CGPoint(x: 14.57, y: 0.14))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 12.5, y: 8.34))
        bezierPath.addCurve(to: CGPoint(x: 11.26, y: 8.52), controlPoint1: CGPoint(x: 12.07, y: 8.34), controlPoint2: CGPoint(x: 11.65, y: 8.4))
        bezierPath.addCurve(to: CGPoint(x: 8.33, y: 12.5), controlPoint1: CGPoint(x: 9.57, y: 9.05), controlPoint2: CGPoint(x: 8.33, y: 10.63))
        bezierPath.addCurve(to: CGPoint(x: 12.5, y: 16.67), controlPoint1: CGPoint(x: 8.33, y: 14.8), controlPoint2: CGPoint(x: 10.2, y: 16.67))
        bezierPath.addCurve(to: CGPoint(x: 16.67, y: 12.5), controlPoint1: CGPoint(x: 14.8, y: 16.67), controlPoint2: CGPoint(x: 16.67, y: 14.8))
        bezierPath.addCurve(to: CGPoint(x: 12.5, y: 8.34), controlPoint1: CGPoint(x: 16.67, y: 10.2), controlPoint2: CGPoint(x: 14.8, y: 8.34))
        bezierPath.close()
        UIColor.gray.setFill()
        bezierPath.fill()
    }

    open class func drawTabBarRequestsIcon() {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 14.06, y: 0))
        bezierPath.addCurve(to: CGPoint(x: 14.06, y: 18.75), controlPoint1: CGPoint(x: 14.06, y: 0), controlPoint2: CGPoint(x: 14.06, y: 11.35))
        bezierPath.addLine(to: CGPoint(x: 10.94, y: 18.75))
        bezierPath.addCurve(to: CGPoint(x: 10.94, y: 0), controlPoint1: CGPoint(x: 10.94, y: 11.35), controlPoint2: CGPoint(x: 10.94, y: 0))
        bezierPath.addLine(to: CGPoint(x: 14.06, y: 0))
        bezierPath.addLine(to: CGPoint(x: 14.06, y: 0))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 14.06, y: 21.88))
        bezierPath.addCurve(to: CGPoint(x: 14.06, y: 25), controlPoint1: CGPoint(x: 14.06, y: 23.78), controlPoint2: CGPoint(x: 14.06, y: 25))
        bezierPath.addLine(to: CGPoint(x: 10.94, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 10.94, y: 21.88), controlPoint1: CGPoint(x: 10.94, y: 25), controlPoint2: CGPoint(x: 10.94, y: 23.78))
        bezierPath.addLine(to: CGPoint(x: 14.06, y: 21.88))
        bezierPath.close()
        UIColor.gray.setFill()
        bezierPath.fill()
    }

    open class func drawUpIcon() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 60, height: 60))
        UIColor.white.setFill()
        rectanglePath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 30, y: 4))
        bezier2Path.addCurve(to: CGPoint(x: 38.51, y: 12.51), controlPoint1: CGPoint(x: 30, y: 4), controlPoint2: CGPoint(x: 33.81, y: 7.81))
        bezier2Path.addCurve(to: CGPoint(x: 38.95, y: 12.95), controlPoint1: CGPoint(x: 38.66, y: 12.66), controlPoint2: CGPoint(x: 38.8, y: 12.8))
        bezier2Path.addCurve(to: CGPoint(x: 43.76, y: 17.76), controlPoint1: CGPoint(x: 40.5, y: 14.5), controlPoint2: CGPoint(x: 42.14, y: 16.14))
        bezier2Path.addCurve(to: CGPoint(x: 56, y: 30), controlPoint1: CGPoint(x: 50, y: 24), controlPoint2: CGPoint(x: 56, y: 30))
        bezier2Path.addCurve(to: CGPoint(x: 33.25, y: 30), controlPoint1: CGPoint(x: 56, y: 30), controlPoint2: CGPoint(x: 40.22, y: 30.08))
        bezier2Path.addCurve(to: CGPoint(x: 33.25, y: 43), controlPoint1: CGPoint(x: 33.25, y: 34.21), controlPoint2: CGPoint(x: 33.25, y: 38.71))
        bezier2Path.addLine(to: CGPoint(x: 26.75, y: 43))
        bezier2Path.addCurve(to: CGPoint(x: 26.75, y: 29.74), controlPoint1: CGPoint(x: 26.75, y: 38.71), controlPoint2: CGPoint(x: 26.75, y: 33.95))
        bezier2Path.addCurve(to: CGPoint(x: 26.75, y: 24.9), controlPoint1: CGPoint(x: 26.75, y: 27.5), controlPoint2: CGPoint(x: 26.75, y: 25.75))
        bezier2Path.addCurve(to: CGPoint(x: 30, y: 24.82), controlPoint1: CGPoint(x: 28.62, y: 24.85), controlPoint2: CGPoint(x: 30, y: 24.82))
        bezier2Path.addLine(to: CGPoint(x: 43, y: 25.12))
        bezier2Path.addLine(to: CGPoint(x: 30, y: 12.12))
        bezier2Path.addLine(to: CGPoint(x: 17, y: 25.12))
        bezier2Path.addCurve(to: CGPoint(x: 20.25, y: 25.05), controlPoint1: CGPoint(x: 17, y: 25.12), controlPoint2: CGPoint(x: 18.38, y: 25.09))
        bezier2Path.addCurve(to: CGPoint(x: 20.25, y: 30), controlPoint1: CGPoint(x: 20.25, y: 25.96), controlPoint2: CGPoint(x: 20.25, y: 27.84))
        bezier2Path.addCurve(to: CGPoint(x: 4, y: 30), controlPoint1: CGPoint(x: 12.87, y: 30.08), controlPoint2: CGPoint(x: 4, y: 30))
        bezier2Path.addCurve(to: CGPoint(x: 18.44, y: 15.56), controlPoint1: CGPoint(x: 4, y: 30), controlPoint2: CGPoint(x: 11.5, y: 22.5))
        bezier2Path.addCurve(to: CGPoint(x: 29.99, y: 4), controlPoint1: CGPoint(x: 24.31, y: 9.69), controlPoint2: CGPoint(x: 29.79, y: 4.21))
        bezier2Path.addLine(to: CGPoint(x: 30, y: 4))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 33.25, y: 49.5))
        bezier2Path.addCurve(to: CGPoint(x: 33.25, y: 56), controlPoint1: CGPoint(x: 33.25, y: 53.37), controlPoint2: CGPoint(x: 33.25, y: 56))
        bezier2Path.addLine(to: CGPoint(x: 26.75, y: 56))
        bezier2Path.addCurve(to: CGPoint(x: 26.75, y: 49.5), controlPoint1: CGPoint(x: 26.75, y: 56), controlPoint2: CGPoint(x: 26.75, y: 53.37))
        bezier2Path.addLine(to: CGPoint(x: 33.25, y: 49.5))
        bezier2Path.close()
        UpStyleKit.baseColor.setFill()
        bezier2Path.fill()
    }

    open class func drawSettingsIcon() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 29, height: 29))
        UIColor.white.setFill()
        rectanglePath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 14.5, y: 2))
        bezier2Path.addCurve(to: CGPoint(x: 18.59, y: 6.09), controlPoint1: CGPoint(x: 14.5, y: 2), controlPoint2: CGPoint(x: 16.33, y: 3.83))
        bezier2Path.addCurve(to: CGPoint(x: 18.8, y: 6.3), controlPoint1: CGPoint(x: 18.66, y: 6.16), controlPoint2: CGPoint(x: 18.73, y: 6.23))
        bezier2Path.addCurve(to: CGPoint(x: 21.12, y: 8.62), controlPoint1: CGPoint(x: 19.55, y: 7.05), controlPoint2: CGPoint(x: 20.34, y: 7.84))
        bezier2Path.addCurve(to: CGPoint(x: 27, y: 14.5), controlPoint1: CGPoint(x: 24.11, y: 11.61), controlPoint2: CGPoint(x: 27, y: 14.5))
        bezier2Path.addCurve(to: CGPoint(x: 16.06, y: 14.5), controlPoint1: CGPoint(x: 27, y: 14.5), controlPoint2: CGPoint(x: 19.42, y: 14.54))
        bezier2Path.addCurve(to: CGPoint(x: 16.06, y: 20.75), controlPoint1: CGPoint(x: 16.06, y: 16.52), controlPoint2: CGPoint(x: 16.06, y: 18.69))
        bezier2Path.addLine(to: CGPoint(x: 12.94, y: 20.75))
        bezier2Path.addCurve(to: CGPoint(x: 12.94, y: 14.38), controlPoint1: CGPoint(x: 12.94, y: 18.69), controlPoint2: CGPoint(x: 12.94, y: 16.4))
        bezier2Path.addCurve(to: CGPoint(x: 12.94, y: 12.05), controlPoint1: CGPoint(x: 12.94, y: 13.3), controlPoint2: CGPoint(x: 12.94, y: 12.46))
        bezier2Path.addCurve(to: CGPoint(x: 14.5, y: 12.01), controlPoint1: CGPoint(x: 13.83, y: 12.03), controlPoint2: CGPoint(x: 14.5, y: 12.01))
        bezier2Path.addLine(to: CGPoint(x: 20.75, y: 12.16))
        bezier2Path.addLine(to: CGPoint(x: 14.5, y: 5.91))
        bezier2Path.addLine(to: CGPoint(x: 8.25, y: 12.16))
        bezier2Path.addCurve(to: CGPoint(x: 9.81, y: 12.12), controlPoint1: CGPoint(x: 8.25, y: 12.16), controlPoint2: CGPoint(x: 8.92, y: 12.14))
        bezier2Path.addCurve(to: CGPoint(x: 9.81, y: 14.5), controlPoint1: CGPoint(x: 9.81, y: 12.56), controlPoint2: CGPoint(x: 9.81, y: 13.46))
        bezier2Path.addCurve(to: CGPoint(x: 2, y: 14.5), controlPoint1: CGPoint(x: 6.27, y: 14.54), controlPoint2: CGPoint(x: 2, y: 14.5))
        bezier2Path.addCurve(to: CGPoint(x: 8.94, y: 7.56), controlPoint1: CGPoint(x: 2, y: 14.5), controlPoint2: CGPoint(x: 5.6, y: 10.9))
        bezier2Path.addCurve(to: CGPoint(x: 14.5, y: 2), controlPoint1: CGPoint(x: 11.77, y: 4.73), controlPoint2: CGPoint(x: 14.4, y: 2.1))
        bezier2Path.addLine(to: CGPoint(x: 14.5, y: 2))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 16.06, y: 23.87))
        bezier2Path.addCurve(to: CGPoint(x: 16.06, y: 27), controlPoint1: CGPoint(x: 16.06, y: 25.74), controlPoint2: CGPoint(x: 16.06, y: 27))
        bezier2Path.addLine(to: CGPoint(x: 12.94, y: 27))
        bezier2Path.addCurve(to: CGPoint(x: 12.94, y: 23.87), controlPoint1: CGPoint(x: 12.94, y: 27), controlPoint2: CGPoint(x: 12.94, y: 25.74))
        bezier2Path.addLine(to: CGPoint(x: 16.06, y: 23.87))
        bezier2Path.close()
        UpStyleKit.baseColor.setFill()
        bezier2Path.fill()
    }

    open class func drawCheckmark() {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 1, y: 7.5))
        bezierPath.addLine(to: CGPoint(x: 7, y: 13))
        bezierPath.addLine(to: CGPoint(x: 14, y: 1))
        UpStyleKit.baseColor.setStroke()
        bezierPath.lineWidth = 2
        bezierPath.stroke()
    }

    open class func drawUpButton() {

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 17.75, y: 16.5))
        bezier2Path.addCurve(to: CGPoint(x: 20, y: 16.5), controlPoint1: CGPoint(x: 19.04, y: 16.47), controlPoint2: CGPoint(x: 20, y: 16.5))
        bezier2Path.addLine(to: CGPoint(x: 29, y: 16.5))
        bezier2Path.addLine(to: CGPoint(x: 20, y: 7.62))
        bezier2Path.addLine(to: CGPoint(x: 11, y: 16.5))
        bezier2Path.addCurve(to: CGPoint(x: 17.75, y: 16.5), controlPoint1: CGPoint(x: 11, y: 16.5), controlPoint2: CGPoint(x: 16.46, y: 16.53))
        bezier2Path.move(to: CGPoint(x: 22.25, y: 33.5))
        bezier2Path.addCurve(to: CGPoint(x: 22.25, y: 38), controlPoint1: CGPoint(x: 22.25, y: 36.18), controlPoint2: CGPoint(x: 22.25, y: 38))
        bezier2Path.addLine(to: CGPoint(x: 17.75, y: 38))
        bezier2Path.addCurve(to: CGPoint(x: 17.75, y: 33.5), controlPoint1: CGPoint(x: 17.75, y: 38), controlPoint2: CGPoint(x: 17.75, y: 36.18))
        bezier2Path.addLine(to: CGPoint(x: 22.25, y: 33.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 17.75, y: 20))
        bezier2Path.addCurve(to: CGPoint(x: 2, y: 20), controlPoint1: CGPoint(x: 12.64, y: 20.06), controlPoint2: CGPoint(x: 2, y: 20))
        bezier2Path.addCurve(to: CGPoint(x: 12, y: 10), controlPoint1: CGPoint(x: 2, y: 20), controlPoint2: CGPoint(x: 7.19, y: 14.81))
        bezier2Path.addCurve(to: CGPoint(x: 20, y: 2), controlPoint1: CGPoint(x: 16.06, y: 5.94), controlPoint2: CGPoint(x: 19.85, y: 2.14))
        bezier2Path.addLine(to: CGPoint(x: 20, y: 2))
        bezier2Path.addCurve(to: CGPoint(x: 25.89, y: 7.89), controlPoint1: CGPoint(x: 20, y: 2), controlPoint2: CGPoint(x: 22.64, y: 4.64))
        bezier2Path.addCurve(to: CGPoint(x: 26.2, y: 8.19), controlPoint1: CGPoint(x: 25.99, y: 7.99), controlPoint2: CGPoint(x: 26.09, y: 8.09))
        bezier2Path.addCurve(to: CGPoint(x: 29.53, y: 11.53), controlPoint1: CGPoint(x: 27.27, y: 9.27), controlPoint2: CGPoint(x: 28.4, y: 10.4))
        bezier2Path.addCurve(to: CGPoint(x: 38, y: 20), controlPoint1: CGPoint(x: 33.84, y: 15.84), controlPoint2: CGPoint(x: 38, y: 20))
        bezier2Path.addCurve(to: CGPoint(x: 22.25, y: 20), controlPoint1: CGPoint(x: 38, y: 20), controlPoint2: CGPoint(x: 27.08, y: 20.05))
        bezier2Path.addCurve(to: CGPoint(x: 22.25, y: 29), controlPoint1: CGPoint(x: 22.25, y: 22.91), controlPoint2: CGPoint(x: 22.25, y: 26.03))
        bezier2Path.addLine(to: CGPoint(x: 17.75, y: 29))
        bezier2Path.addCurve(to: CGPoint(x: 17.75, y: 19.82), controlPoint1: CGPoint(x: 17.75, y: 26.03), controlPoint2: CGPoint(x: 17.75, y: 22.74))
        UpStyleKit.baseColor.setFill()
        bezier2Path.fill()
    }

    open class func drawDownButton() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let backgroundColor = UIColor(red: 1.000, green: 0.463, blue: 0.894, alpha: 1.000)

        //// Bezier 2 Drawing
        context!.saveGState()
        context!.translateBy(x: 38, y: 38)
        context!.rotate(by: -180 * CGFloat(M_PI) / 180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 15.75, y: 14.5))
        bezier2Path.addCurve(to: CGPoint(x: 18, y: 14.5), controlPoint1: CGPoint(x: 17.04, y: 14.47), controlPoint2: CGPoint(x: 18, y: 14.5))
        bezier2Path.addLine(to: CGPoint(x: 27, y: 14.5))
        bezier2Path.addLine(to: CGPoint(x: 18, y: 5.62))
        bezier2Path.addLine(to: CGPoint(x: 9, y: 14.5))
        bezier2Path.addCurve(to: CGPoint(x: 15.75, y: 14.5), controlPoint1: CGPoint(x: 9, y: 14.5), controlPoint2: CGPoint(x: 14.46, y: 14.53))
        bezier2Path.move(to: CGPoint(x: 20.25, y: 31.5))
        bezier2Path.addCurve(to: CGPoint(x: 20.25, y: 36), controlPoint1: CGPoint(x: 20.25, y: 34.18), controlPoint2: CGPoint(x: 20.25, y: 36))
        bezier2Path.addLine(to: CGPoint(x: 15.75, y: 36))
        bezier2Path.addCurve(to: CGPoint(x: 15.75, y: 31.5), controlPoint1: CGPoint(x: 15.75, y: 36), controlPoint2: CGPoint(x: 15.75, y: 34.18))
        bezier2Path.addLine(to: CGPoint(x: 20.25, y: 31.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 15.75, y: 18))
        bezier2Path.addLine(to: CGPoint(x: 0, y: 18))
        bezier2Path.addCurve(to: CGPoint(x: 10, y: 8), controlPoint1: CGPoint(x: 0, y: 18), controlPoint2: CGPoint(x: 5.19, y: 12.81))
        bezier2Path.addCurve(to: CGPoint(x: 18, y: 0), controlPoint1: CGPoint(x: 14.06, y: 3.94), controlPoint2: CGPoint(x: 17.85, y: 0.14))
        bezier2Path.addLine(to: CGPoint(x: 18, y: 0))
        bezier2Path.addCurve(to: CGPoint(x: 23.89, y: 5.89), controlPoint1: CGPoint(x: 18, y: -0), controlPoint2: CGPoint(x: 20.64, y: 2.64))
        bezier2Path.addCurve(to: CGPoint(x: 24.2, y: 6.19), controlPoint1: CGPoint(x: 23.99, y: 5.99), controlPoint2: CGPoint(x: 24.09, y: 6.09))
        bezier2Path.addCurve(to: CGPoint(x: 27.53, y: 9.53), controlPoint1: CGPoint(x: 25.27, y: 7.27), controlPoint2: CGPoint(x: 26.4, y: 8.4))
        bezier2Path.addCurve(to: CGPoint(x: 36, y: 18), controlPoint1: CGPoint(x: 31.84, y: 13.84), controlPoint2: CGPoint(x: 36, y: 18))
        bezier2Path.addCurve(to: CGPoint(x: 20.25, y: 18), controlPoint1: CGPoint(x: 36, y: 18), controlPoint2: CGPoint(x: 25.08, y: 18.05))
        bezier2Path.addCurve(to: CGPoint(x: 20.25, y: 27), controlPoint1: CGPoint(x: 20.25, y: 20.91), controlPoint2: CGPoint(x: 20.25, y: 24.03))
        bezier2Path.addLine(to: CGPoint(x: 15.75, y: 27))
        bezier2Path.addCurve(to: CGPoint(x: 15.75, y: 17.82), controlPoint1: CGPoint(x: 15.75, y: 24.03), controlPoint2: CGPoint(x: 15.75, y: 17.82))
        backgroundColor.setFill()
        bezier2Path.fill()

        context!.restoreGState()
    }

}
